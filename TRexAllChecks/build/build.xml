<?xml version="1.0" encoding="UTF-8"?>

<project name="TRex" default="build">
  <property name="workspace" value="${basedir}" />
  <property name="sourcedir" value="${basedir}/src" />
  <property name="builddir" value="${workspace}/app/build" />
  <property environment="env"/>
  <target name="build"
  depends="prepare,vendors,parameters,lint,phpcpd,phpcs-ci,phpunit,phpcb,deploy"/>
  <target name="build-parallel" depends="prepare,lint,tools-parallel,phpunit,phpcb,deploy"/>

  <target name="tools-parallel" description="Run tools in parallel">
    <parallel threadCount="2">
      <antcall target="phpcpd"/>
      <antcall target="phpcs-ci"/>
    </parallel>
  </target>

  <target name="clean" description="Cleanup build artifacts">
    <delete dir="${builddir}/api"/>
    <delete dir="${builddir}/api"/>
    <delete dir="${builddir}/code-browser"/>
    <delete dir="${builddir}/coverage"/>
    <delete dir="${builddir}/logs"/>
  </target>

  <target name="prepare" depends="clean" description="Prepare for build">
    <mkdir dir="${builddir}/api"/>
    <mkdir dir="${builddir}/code-browser"/>
    <mkdir dir="${builddir}/coverage"/>
    <mkdir dir="${builddir}/logs"/>
  </target>

  <target name="lint" description="Perform syntax check of sourcecode files">
    <apply executable="php" failonerror="true">
    <arg value="-l" />
    <fileset dir="${sourcedir}">
      <include name="**/*.php" />
      <modified />
    </fileset>
    <fileset dir="${basedir}/src/">
      <include name="**/*Test.php" />
      <modified />
    </fileset>
    </apply>
  </target>

  <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
    <exec executable="/usr/local/bin/phpcs">
      <arg value="--standard=Symfony2" />
      <arg path="${sourcedir}" />
    </exec>
  </target>

  <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
    <exec executable="/usr/local/bin/phpcs">
      <arg value="--report=checkstyle" />
      <arg value="--report-file=${builddir}/logs/checkstyle.xml" />
      <arg value="--standard=Symfony2" />
      <arg path="${sourcedir}" />
    </exec>
  </target>

  <target name="phpcpd" description="Find duplicate code using PHPCPD">
    <exec executable="/usr/local/bin/phpcpd">
      <arg value="--log-pmd" />
      <arg value="${builddir}/logs/pmd-cpd.xml" />
      <arg path="${sourcedir}" />
    </exec>
  </target>

  <target name="phpunit" description="Run unit tests with PHPUnit">
    <exec executable="/usr/local/bin/phpunit" failonerror="true">
      <arg value="-c" />
      <arg path="${basedir}/app/phpunit.xml.dist" />
    </exec>
  </target>

  <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
    <exec executable="/usr/local/bin/phpcb">
      <arg value="--log" />
      <arg path="${builddir}/logs" />
      <arg value="--source" />
      <arg path="${sourcedir}" />
      <arg value="--output" />
      <arg path="${builddir}/code-browser" />
    </exec>
  </target>
  
 <target name="vendors">
   <exec executable="${basedir}/composer.phar" failonerror="true">
   <arg value="self-update" />
  </exec>
   <exec executable="${basedir}/composer.phar" failonerror="true">
   <arg value="install" />
  </exec>
 </target>

  <target name="parameters" description="Copy parameters">
    <exec executable="cp" failonerror="true">
      <arg path="${env.DEPLOYER}T-Rex-Dev-Deployment/parameters.yml" />
      <arg path="app/config/parameters.yml" />
    </exec>
  </target>
  
  <target name="deploy" depends="phpunit">
    <echo message="Running deploy" />
    <exec dir="${env.DEPLOYER}T-Rex-Dev-Deployment/" executable="/usr/local/bin/dep" failonerror="true">
            <arg value="deploy"/>
            <arg value="dev"/>
    </exec>
  </target>
  
</project>
